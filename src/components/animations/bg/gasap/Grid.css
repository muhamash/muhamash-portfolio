/* Grid.css */
:root {
  --speed: 5s;
  --increase-vert: calc(var(--speed) / 10);
  --scanlines: 1px;
}

@keyframes blur-n-hue {
  0% {filter: blur(10px) hue-rotate(-15deg);}
  50% {filter: blur(20px) hue-rotate(0deg);}
  100% {filter: blur(10px) hue-rotate(-15deg);}
}

@keyframes move {
  from {top: 0%; opacity: 0.8;}
  to {top: 100%; opacity: 1;}
}

@keyframes angle {
  0% {transform: rotateX(58deg);}
  50% {transform: rotateX(60deg);}
  100% {transform: rotateX(58deg);}
}

@keyframes bg {
  0% {background-color: rgba(46, 46, 46, 0);}
  49% {background-color: rgba(46, 46, 46, 0);}
  50.5% {background-color: rgba(155, 155, 206, 0.4);}
  51% {background-color: rgba(46, 46, 46, 0);}
  51.5% {background-color: rgba(155, 155, 206, 0.3);}
  57% {background-color: rgba(46, 46, 46, 0);}
  100% {background-color: rgba(46, 46, 46, 0);}
}

html {
  background: rgba(46, 46, 46, 1);
}

body {
  background: rgba(46, 46, 46, 1);
  animation: bg 10s infinite ease-out;
  height: 100vh;
  overflow: hidden;
  position: relative;
  margin: 0;
}

body:before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(30, 30, 30, 0.2);
  background: repeating-linear-gradient(
    to bottom,
    transparent 0px,
    transparent var(--scanlines),
    rgba(30, 30, 30, 0.15) var(--scanlines),
    rgba(30, 30, 30, 0.15) calc(var(--scanlines) * 2)
  );
  background-size: 100% calc(var(--scanlines) * 2);
  display: block;
  z-index: 10;
}

.text {
  color: white;
  font: small-caps lighter 14px/150% "Helvetica Neue", Helvetica, sans-serif;
  letter-spacing: 0.2rem;
  position: absolute;
  top: 20%;
  left: 50%;
  transform: translateX(-50%);
  text-align: left;
  line-height: 1.2em;
  z-index: 20;
}

.text b {
  font-size: 2.5em;
}

.text b:after {
  content: "v2";
  font-weight: 100;
  font-size: 12px;
  position: absolute;
}

main {
  animation: blur-n-hue var(--speed) infinite ease-in-out;
  content: "";
  display: block;
  background: rgba(224, 87, 90, 1);
  background: linear-gradient(
    180deg,
    rgba(150, 50, 50, 0.8) 0%,
    rgba(200, 50, 100, 1) 6%,
    rgba(220, 220, 220, 1) 8%,
    rgba(224, 87, 90, 1) 12%,
    rgba(224, 37, 90, 1) 100%
  );
  width: 150vw;
  height: 80%;
  left: -25%;
  bottom: -10%;
  position: absolute;
}

.grid {
  perspective: 300px;
  width: 100%;
  height: 100%;
  position: relative;
}

.grid-inner {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  transform: rotateX(60deg);
}

.line {
  display: block;
  position: absolute;
  width: 0px;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border: 1px solid white;
  box-sizing: border-box;
  height: 100%;
  background: white;
  box-shadow: 0px 0px 6px 2px rgba(255, 225, 225, 0.8);
}

.hori,
.vert {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100vw;
  height: 100vh;
}

.hori .line:nth-child(1) {
  left: -40%;
}
.hori .line:nth-child(2) {
  left: -20%;
}
.hori .line:nth-child(3) {
  left: 0%;
}
.hori .line:nth-child(4) {
  left: 20%;
}
.hori .line:nth-child(5) {
  left: 40%;
}
.hori .line:nth-child(6) {
  left: 60%;
}
.hori .line:nth-child(7) {
  left: 80%;
}
.hori .line:nth-child(8) {
  left: 100%;
}
.hori .line:nth-child(9) {
  left: 120%;
}
.hori .line:nth-child(10) {
  left: 140%;
}

.vert .line {
  animation: move var(--speed) infinite linear;
  width: 200%;
  left: -50%;
  height: 0px;
}

.vert .line:nth-child(1) {
  animation: none;
  opacity: 0.7;
}
.vert .line:nth-child(2) {
  animation-delay: calc(var(--increase-vert) * 1);
}
.vert .line:nth-child(3) {
  animation-delay: calc(var(--increase-vert) * 2);
}
.vert .line:nth-child(4) {
  animation-delay: calc(var(--increase-vert) * 3);
}
.vert .line:nth-child(5) {
  animation-delay: calc(var(--increase-vert) * 4);
}
.vert .line:nth-child(6) {
  animation-delay: calc(var(--increase-vert) * 5);
}
.vert .line:nth-child(7) {
  animation-delay: calc(var(--increase-vert) * 6);
}
.vert .line:nth-child(8) {
  animation-delay: calc(var(--increase-vert) * 7);
}
.vert .line:nth-child(9) {
  animation-delay: calc(var(--increase-vert) * 8);
}
.vert .line:nth-child(10) {
  animation-delay: calc(var(--increase-vert) * 9);
}